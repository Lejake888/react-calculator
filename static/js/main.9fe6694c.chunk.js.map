{"version":3,"sources":["App.js","index.js"],"names":["App","state","numbers","zero","one","two","three","four","five","six","seven","eight","nine","screen","equalPress","total","toString","calc","replace","sum","eval","console","log","setState","clearPress","numberPress","number","list","concat","value","className","this","id","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0zCAGMA,I,+vBACJC,MAAQ,CACNC,QACA,CACE,CAACC,KAAM,GACP,CAACC,IAAK,GACN,CAACC,IAAK,GACN,CAACC,MAAO,GACR,CAACC,KAAM,GACP,CAACC,KAAM,GACP,CAACC,IAAK,GACN,CAACC,MAAO,GACR,CAACC,MAAO,GACR,CAACC,KAAM,IAETC,OAAQ,I,MAGVC,WAAa,WACX,IAAIC,MAAQ,MAAKd,MAAMY,OAAOG,WAC1BC,KAAOF,MAAMG,QAAQ,KAAM,IAC3BC,IAAMC,KAAKH,MACfI,QAAQC,IAAIH,KACZ,MAAKI,SAAS,CAACV,OAAQM,O,MAKzBK,WAAa,WACX,MAAKD,SAAS,CAACV,OAAQ,M,MAGzBY,YAAc,SAACC,GACT,MAAKzB,MAAMY,QACb,MAAKU,SAAS,CAACV,OAAQ,CAACa,KAE1B,IAAMC,EAAO,MAAK1B,MAAMY,OAAOe,OAAOF,GAGtC,OAFA,MAAKH,SAAS,CAACV,OAAQc,IAEhB,CACLA,OACAE,MAAO,K,4XAIA,IAAD,OACR,OACE,kEAAKC,UAAY,WACf,mFACE,kEAAKA,UAAY,cACf,kEAAKA,UAAY,UACf,oEAAIC,KAAK9B,MAAMY,SAEf,kEAAKiB,UAAY,cACb,kEAAKA,UAAY,eACf,qEAAQE,GAAK,OAAOC,QAAW,kBAAM,EAAKR,YAAY,KAAtD,KACA,qEAAQO,GAAK,MAAMC,QAAW,kBAAM,EAAKR,YAAY,KAArD,KACA,qEAAQO,GAAK,MAAMC,QAAW,kBAAM,EAAKR,YAAY,KAArD,KACA,qEAAQO,GAAK,QAAQC,QAAW,kBAAM,EAAKR,YAAY,KAAvD,KACA,qEAAQO,GAAK,OAAOC,QAAW,kBAAM,EAAKR,YAAY,KAAtD,KACA,qEAAQO,GAAK,OAAOC,QAAW,kBAAM,EAAKR,YAAY,KAAtD,KACA,qEAAQO,GAAK,MAAMC,QAAW,kBAAM,EAAKR,YAAY,KAArD,KACA,qEAAQO,GAAK,QAAQC,QAAW,kBAAM,EAAKR,YAAY,KAAvD,KACA,qEAAQO,GAAK,QAAQC,QAAW,kBAAM,EAAKR,YAAY,KAAvD,KACA,qEAAQO,GAAK,OAAOC,QAAW,kBAAM,EAAKR,YAAY,KAAtD,KACA,qEAAQO,GAAK,QAAQC,QAAW,kBAAM,EAAKT,eAA3C,UAEF,kEAAKM,UAAY,mBACf,qEAAQE,GAAK,SAASC,QAAW,kBAAM,EAAKR,YAAY,OAAxD,QACA,qEAAQO,GAAK,WAAWC,QAAW,kBAAM,EAAKR,YAAY,OAA1D,KACA,qEAAQO,GAAK,QAAQC,QAAW,kBAAM,EAAKR,YAAY,OAAvD,KACA,qEAAQO,GAAK,MAAMC,QAAW,kBAAM,EAAKR,YAAY,OAArD,KACA,qEAAQO,GAAK,cAAcC,QAAW,kBAAM,EAAKR,YAAY,OAA7D,KACA,qEAAQO,GAAK,eAAeC,QAAW,kBAAM,EAAKR,YAAY,OAA9D,KACA,qEAAQO,GAAK,UAAUC,QAAW,kBAAM,EAAKR,YAAY,OAAzD,KAEA,qEAAQO,GAAK,QAAQC,QAAW,kBAAM,EAAKnB,WAAW,OAAtD,a,KA5EFoB,6CAAMC,WAqFTnC,2B,mECxFf,0DAKAoC,IAASC,OAAO,kBAAC,IAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.9fe6694c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    numbers : \n    [ \n      {zero: 0},\n      {one: 1},\n      {two: 2},\n      {three: 3},\n      {four: 4},\n      {five: 5},\n      {six: 6},\n      {seven: 7},\n      {eight: 8},\n      {nine: 9},\n    ],\n    screen: [],\n}\n\n  equalPress = () => {\n    let total = this.state.screen.toString();\n    let calc = total.replace(/,/g, '')\n    let sum = eval(calc)\n    console.log(sum)\n    this.setState({screen: sum})\n\n    // total.join()\n  }\n\n  clearPress = () => {\n    this.setState({screen: []})\n  }\n\n  numberPress = (number) => {\n    if (this.state.screen) {\n      this.setState({screen: [number]})\n    }\n    const list = this.state.screen.concat(number);\n    this.setState({screen: list})\n    // console.log(this.state.screen)\n    return {\n      list,\n      value: '',\n    }\n  }\n\n  render () {\n    return(\n      <div className = \"website\">\n        <h1>Calculator</h1>\n          <div className = \"calculator\">\n            <div className = \"screen\">\n              <p>{this.state.screen}</p>\n            </div>\n              <div className = \"allButtons\"> \n                  <div className = \"mainButtons\">\n                    <button id = \"zero\" onClick = {() => this.numberPress(0)}>0</button>\n                    <button id = \"one\" onClick = {() => this.numberPress(1)}>1</button>\n                    <button id = \"two\" onClick = {() => this.numberPress(2)}>2</button>\n                    <button id = \"three\" onClick = {() => this.numberPress(3)}>3</button>\n                    <button id = \"four\" onClick = {() => this.numberPress(4)}>4</button>\n                    <button id = \"five\" onClick = {() => this.numberPress(5)}>5</button>\n                    <button id = \"six\" onClick = {() => this.numberPress(6)}>6</button>\n                    <button id = \"seven\" onClick = {() => this.numberPress(7)}>7</button>\n                    <button id = \"eight\" onClick = {() => this.numberPress(8)}>8</button>\n                    <button id = \"nine\" onClick = {() => this.numberPress(9)}>9</button>\n                    <button id = \"clear\" onClick = {() => this.clearPress()}>Clear</button>\n                  </div>\n                  <div className = \"operatorButtons\">\n                    <button id = \"divide\" onClick = {() => this.numberPress(\"/\")}>รท</button>\n                    <button id = \"multiply\" onClick = {() => this.numberPress(\"*\")}>*</button>\n                    <button id = \"minus\" onClick = {() => this.numberPress(\"-\")}>-</button>\n                    <button id = \"add\" onClick = {() => this.numberPress(\"+\")}>+</button>\n                    <button id = \"leftbracket\" onClick = {() => this.numberPress(\"(\")}>(</button>\n                    <button id = \"rightbracket\" onClick = {() => this.numberPress(\")\")}>)</button>\n                    <button id = \"decimal\" onClick = {() => this.numberPress(\".\")}>.</button>\n\n                    <button id = \"equal\" onClick = {() => this.equalPress(\"=\")}>=</button> \n                  </div>\n              </div>\n          </div>\n        </div>\n      )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}