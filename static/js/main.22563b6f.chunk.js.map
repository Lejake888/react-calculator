{"version":3,"sources":["App.js","index.js"],"names":["App","state","numbers","zero","one","two","three","four","five","six","seven","eight","nine","screen","total","ClearPress","setState","NumberPress","number","list","concat","value","className","this","id","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uOA8EeA,G,iNA1EbC,MAAQ,CACNC,QACA,CACE,CAACC,KAAM,GACP,CAACC,IAAK,GACN,CAACC,IAAK,GACN,CAACC,MAAO,GACR,CAACC,KAAM,GACP,CAACC,KAAM,GACP,CAACC,IAAK,GACN,CAACC,MAAO,GACR,CAACC,MAAO,GACR,CAACC,KAAM,IAETC,OAAQ,GACRC,MAAO,G,EAGTC,WAAa,WACX,EAAKC,SAAS,CAACH,OAAQ,M,EAGzBI,YAAc,SAACC,GACb,IAAMC,EAAO,EAAKlB,MAAMY,OAAOO,OAAOF,GAGtC,OAFA,EAAKF,SAAS,CAACH,OAAQM,IAEhB,CACLA,OACAE,MAAO,K,wEAaA,IAAD,OACR,OACE,yBAAKC,UAAY,cACf,yBAAKA,UAAY,UACf,2BAAIC,KAAKtB,MAAMY,SAEf,yBAAKS,UAAY,cACb,yBAAKA,UAAY,eACf,4BAAQE,GAAK,OAAOC,QAAW,kBAAM,EAAKR,YAAY,KAAtD,KACA,4BAAQO,GAAK,MAAMC,QAAW,kBAAM,EAAKR,YAAY,KAArD,KACA,4BAAQO,GAAK,MAAMC,QAAW,kBAAM,EAAKR,YAAY,KAArD,KACA,4BAAQO,GAAK,QAAQC,QAAW,kBAAM,EAAKR,YAAY,KAAvD,KACA,4BAAQO,GAAK,OAAOC,QAAW,kBAAM,EAAKR,YAAY,KAAtD,KACA,4BAAQO,GAAK,OAAOC,QAAW,kBAAM,EAAKR,YAAY,KAAtD,KACA,4BAAQO,GAAK,MAAMC,QAAW,kBAAM,EAAKR,YAAY,KAArD,KACA,4BAAQO,GAAK,QAAQC,QAAW,kBAAM,EAAKR,YAAY,KAAvD,KACA,4BAAQO,GAAK,QAAQC,QAAW,kBAAM,EAAKR,YAAY,KAAvD,KACA,4BAAQO,GAAK,OAAOC,QAAW,kBAAM,EAAKR,YAAY,KAAtD,KACA,4BAAQO,GAAK,QAAQC,QAAW,kBAAM,EAAKV,eAA3C,UAEF,yBAAKO,UAAY,mBACf,4BAAQE,GAAK,SAASC,QAAW,kBAAM,EAAKR,YAAY,OAAxD,QACA,4BAAQO,GAAK,WAAWC,QAAW,kBAAM,EAAKR,YAAY,OAA1D,KACA,4BAAQO,GAAK,QAAQC,QAAW,kBAAM,EAAKR,YAAY,OAAvD,KACA,4BAAQO,GAAK,MAAMC,QAAW,kBAAM,EAAKR,YAAY,OAArD,KACA,4BAAQO,GAAK,QAAQC,QAAW,kBAAM,EAAKR,YAAY,OAAvD,Y,GAnEES,IAAMC,YCExBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.22563b6f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    numbers : \n    [\n      {zero: 0},\n      {one: 1},\n      {two: 2},\n      {three: 3},\n      {four: 4},\n      {five: 5},\n      {six: 6},\n      {seven: 7},\n      {eight: 8},\n      {nine: 9},\n    ],\n    screen: [],\n    total: 0\n}\n\n  ClearPress = () => {\n    this.setState({screen: []})\n  }\n\n  NumberPress = (number) => {\n    const list = this.state.screen.concat(number);\n    this.setState({screen: list})\n    // console.log(this.state.screen)\n    return {\n      list,\n      value: '',\n    }\n  }\n  \n  // OperatorPress = (operator) => {\n  //   const list = this.state.screen.concat(operator);\n  //   this.setState({screen: list})\n  //   return {\n  //     list,\n  //     value: '',\n  //   }\n  // }\n\n  render () {\n    return(\n      <div className = \"calculator\">\n        <div className = \"screen\">\n          <p>{this.state.screen}</p>\n        </div>\n          <div className = \"allButtons\"> \n              <div className = \"mainButtons\">\n                <button id = \"zero\" onClick = {() => this.NumberPress(0)}>0</button>\n                <button id = \"one\" onClick = {() => this.NumberPress(1)}>1</button>\n                <button id = \"two\" onClick = {() => this.NumberPress(2)}>2</button>\n                <button id = \"three\" onClick = {() => this.NumberPress(3)}>3</button>\n                <button id = \"four\" onClick = {() => this.NumberPress(4)}>4</button>\n                <button id = \"five\" onClick = {() => this.NumberPress(5)}>5</button>\n                <button id = \"six\" onClick = {() => this.NumberPress(6)}>6</button>\n                <button id = \"seven\" onClick = {() => this.NumberPress(7)}>7</button>\n                <button id = \"eight\" onClick = {() => this.NumberPress(8)}>8</button>\n                <button id = \"nine\" onClick = {() => this.NumberPress(9)}>9</button>\n                <button id = \"clear\" onClick = {() => this.ClearPress()}>Clear</button>\n              </div>\n              <div className = \"operatorButtons\">\n                <button id = \"divide\" onClick = {() => this.NumberPress(\"/\")}>รท</button>\n                <button id = \"multiply\" onClick = {() => this.NumberPress(\"*\")}>*</button>\n                <button id = \"minus\" onClick = {() => this.NumberPress(\"-\")}>-</button>\n                <button id = \"add\" onClick = {() => this.NumberPress(\"+\")}>+</button>\n                <button id = \"equal\" onClick = {() => this.NumberPress(\"=\")}>=</button>\n              </div>\n          </div>\n      </div>\n      )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}